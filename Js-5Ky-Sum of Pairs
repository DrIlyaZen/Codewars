Given a list of integers and a single sum value, return the first two values (parse from the left please) in order of appearance that add up to form the sum.

sum_pairs([11, 3, 7, 5],         10)
#              ^--^      3 + 7 = 10
== [3, 7]

sum_pairs([4, 3, 2, 3, 4],         6)
#          ^-----^         4 + 2 = 6, indices: 0, 2 *
#             ^-----^      3 + 3 = 6, indices: 1, 3
#                ^-----^   2 + 4 = 6, indices: 2, 4
#  * entire pair is earlier, and therefore is the correct answer
== [4, 2]
-------------------------------------------------------------------
var sum_pairs=function(ints, s){
var result=[];
ints.reduce((a,b)=>{
  if((a+b)==s){result.push(a,b)};
  return a=b;
})
if(result.length>0){return result}
 for(var i = 0 ; i <ints.length ; i++) {
 if((ints[i]+ints[i+1])==s){return [ints[i],ints[i+1]]}
 var target=s-ints[i];
 if(~ints.indexOf(target)){
   if(ints.lastIndexOf(target)==i){continue};
   return [ints[i],target]}
}
}
