Take a look to the kata Maximum Subarray Sum https://www.codewars.com/kata/maximum-subarray-sum In that kata (if you solved it), you had to give the maximum value of the elements of all the subarrays.

In this kata, we have a similar task but you have to find the sub-array or sub-arrays having this maximum value for their corresponding sums of elements. The wanted function: Python and Ruby: find_subarr_maxsum()// Javascript: findSubarrMaxSum()
-----------------------------------------------------------------------------------------------
var maxSequence = function(arr){
  var min = 0, ans = 0, i, sum = 0;
  for (i = 0; i < arr.length; ++i) {
    sum += arr[i];
    min = Math.min(sum, min);
    ans = Math.max(ans, sum - min);
  }
  return ans;
}
function findSubarrMaxSum(arr){
let max=maxSequence(arr);
if(max==0){return [[],0];}
let result=[];
  for(let i=0;i<arr.length;i++)
{
let cap=0;
for(let j=i;j<arr.length;j++)
{
cap+=arr[j];
if(cap==max){
result.push(arr.slice(i, j+1))
};
}
  }
if(result.length>1){
let result2=[];
result2.push(result)
result2.push(max);
return result2
};
result.push(max);
return result;
}
-------------------------------------------------------------------------------------------------------
